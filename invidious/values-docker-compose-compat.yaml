# Docker Compose Compatible Configuration
# This values file mirrors the docker-compose.yml template configuration

image:
  repository: quay.io/invidious/invidious
  tag: "2025.09.24-42d34cd"  # Same as docker-compose
  pullPolicy: IfNotPresent

# Companion configuration (matches docker-compose)
companion:
  enabled: true
  image:
    repository: quay.io/invidious/invidious-companion
    tag: "master-a866b71"  # Same as docker-compose
    pullPolicy: IfNotPresent
  
  # Security settings matching docker-compose
  securityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL
  
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault

postgresql:
  enabled: true
  image:
    tag: 17  # Same as docker-compose

# Health check using same command as docker-compose
healthcheck:
  enabled: true
  command: ["CMD-SHELL", "wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1"]
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 2

# Security settings matching docker-compose
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Logging configuration (via annotations)
podAnnotations:
  logging.options.max-size: "1G"
  logging.options.max-file: "4"

# Service configuration (matches docker-compose port mapping)
service:
  type: LoadBalancer  # To expose like docker-compose port 80:3000
  port: 80
  targetPort: 3000

# Database configuration (matches docker-compose)
config:
  db:
    user: invidious-user
    password: secure-password  # Use existingSecret in production!
    host: ""  # Auto-filled when postgresql.enabled=true
    port: 5432
    dbname: invidious
  
  check_tables: true
  port: 3000
  
  # Companion integration (matches docker-compose)
  invidious_companion:
    - private_url: ""  # Auto-filled when companion.enabled=true
  
  invidious_companion_key: "your-companion-key-here"  # Use existingSecret in production!
  hmac_key: "your-hmac-key-here"  # Use existingSecret in production!

# Production recommendation: Use existingSecret instead of plaintext values
# existingSecret: "invidious-secrets"

# secrets:
#   companionKey: "your-companion-key"
#   hmacKey: "your-hmac-key"
#   postgresqlPassword: "your-db-password"
