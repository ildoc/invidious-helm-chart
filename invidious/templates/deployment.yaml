{{- include "invidious.init-defaults" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "invidious.fullname" . }}
  labels:
    {{- include "invidious.labels" . | nindent 4 }}
    {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end}}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "invidious.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "invidious.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      enableServiceLinks: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgresql
          image: actions/pg_isready
          env:
            - name: PGHOST
              value: {{ .Values.config.db.host | quote }}
            - name: PGPORT
              value: {{ .Values.config.db.port | quote }}
            {{- if .Values.existingSecret }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: postgresql-username
            {{- else }}
            - name: PGUSER
              value: {{ .Values.config.db.user | quote }}
            {{- end }}
            {{- if .Values.existingSecret }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: postgresql-password
            {{- else }}
            - name: PGPASSWORD
              value: {{ .Values.config.db.password | quote }}
            {{- end }}
          command:
            - /bin/bash
            - -c
            - 'until pg_isready; do echo waiting for database; sleep 2; done'
        - name: init-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          envFrom:
            - secretRef:
                name: {{ template "invidious.fullname" . }}
          env:
            {{/* Override secrets from external secret if provided */}}
            {{- if .Values.existingSecret }}
            - name: INVIDIOUS_CONFIG
              value: |
                {{- $config := deepCopy .Values.config }}
                {{- $_ := set $config "invidious_companion_key" "$(COMPANION_KEY)" }}
                {{- $_ := set $config "hmac_key" "$(HMAC_KEY)" }}
                {{- if .Values.postgresql.auth.existingSecret }}
                {{- $_ := set $config.db "password" "$(DB_PASSWORD)" }}
                {{- $_ := set $config.db "user" "$(DB_USERNAME)" }}
                {{- end }}
                {{- toYaml $config | nindent 16 }}
            - name: COMPANION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: invidious-companion-key
            - name: HMAC_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: hmac-key
            {{- if .Values.existingSecret }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret  }}
                  key: postgresql-password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: postgresql-username
            {{- end }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          command: ["/sbin/tini", "--"]
          args: ["/invidious/invidious", "--migrate"]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ template "invidious.fullname" . }}
          env:
            {{/* Override secrets from external secret if provided */}}
            {{- if .Values.existingSecret }}
            - name: INVIDIOUS_CONFIG
              value: |
                {{- $config := deepCopy .Values.config }}
                {{- $_ := set $config "invidious_companion_key" "$(COMPANION_KEY)" }}
                {{- $_ := set $config "hmac_key" "$(HMAC_KEY)" }}
                {{- if .Values.postgresql.auth.existingSecret }}
                {{- $_ := set $config.db "password" "$(DB_PASSWORD)" }}
                {{- $_ := set $config.db "user" "$(DB_USERNAME)" }}
                {{- end }}
                {{- toYaml $config | nindent 16 }}
            - name: COMPANION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: invidious-companion-key
            - name: HMAC_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: hmac-key
            {{- if .Values.existingSecret }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: postgresql-password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecret }}
                  key: postgresql-username
            {{- end }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.healthcheck.enabled }}
          readinessProbe:
            {{- if .Values.healthcheck.command }}
            exec:
              command: {{ .Values.healthcheck.command | toYaml | nindent 16 }}
            {{- else }}
            httpGet:
              port: http
              path: {{ .Values.healthcheck.path | default "/api/v1/trending" }}
            {{- end }}
            initialDelaySeconds: {{ .Values.healthcheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthcheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.healthcheck.failureThreshold }}
          livenessProbe:
            {{- if .Values.healthcheck.command }}
            exec:
              command: {{ .Values.healthcheck.command | toYaml | nindent 16 }}
            {{- else }}
            httpGet:
              port: http
              path: {{ .Values.healthcheck.path | default "/api/v1/trending" }}
            {{- end }}
            initialDelaySeconds: {{ .Values.healthcheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthcheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.healthcheck.failureThreshold }}
          startupProbe:
            {{- if .Values.healthcheck.command }}
            exec:
              command: {{ .Values.healthcheck.command | toYaml | nindent 16 }}
            {{- else }}
            httpGet:
              port: http
              path: /
            {{- end }}
            periodSeconds: 5
            failureThreshold: 30
          {{- end }}
      restartPolicy: Always
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
